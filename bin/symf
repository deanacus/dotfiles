install() {
  npm i && composer install
}

setUp() {
  install && dbUp
}

tearDown() {
  dbDown && flush && rm -rf node_modules && rm -rf vendor
}

rebuild() {
  tearDown && setUp
}

dbUp() {
  if ! mysql -u root -e 'use xygaming'; then
    php bin/console doctrine:database:create
  fi
  php bin/console doctrine:migrations:migrate -n && \
  php bin/console doctrine:fixtures:load -n && \
  for file in ~/dev/rpt/symfony/app/Resources/ManualMigrations/*.sql; do
    mysql xygaming -u root < $file
  done
}

dbDown() {
  php bin/console doctrine:database:drop --force
}

dbRebuild() {
  dbDown && dbUp
}

jest() {
  npm run test
}

phpUnit() {
  vendor/phpunit/phpunit/phpunit -c phpunit.xml
}

test() {
  case $@ in
    *jest*)
      jest
      ;;
    *php*)
      phpUnit
      ;;
    *)
      echo "No test type specified"
      ;;
  esac
}

build() {
  npm run build
}

flush() {
  for file in ~/dev/rpt/symfony/var/logs/*.log; do
    echo "" > $file > /dev/null
  done

  rm -Rf var/cache/* > /dev/null
}

case "$@" in
