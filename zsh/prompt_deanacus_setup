# ZSH_THEME_GIT_PROMPT_BRANCH="%B%F{magenta}"
# ZSH_THEME_GIT_PROMPT_STAGED="%F{red}●%f"
# ZSH_THEME_GIT_PROMPT_CONFLICTS="%F{red}✖%f"
# ZSH_THEME_GIT_PROMPT_CHANGED="%F{yellow}✚%f"
# ZSH_THEME_GIT_PROMPT_BEHIND="%F{cyan}↓%f"
# ZSH_THEME_GIT_PROMPT_AHEAD="%F{cyan}↑%f"
# ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{cyan}…%f"
# ZSH_THEME_GIT_PROMPT_STASHED="%F{blue}⚑%f"
# ZSH_THEME_GIT_PROMPT_CLEAN="%F{green}✔%f"

# setup_git_arrows() {
#   if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
#     unset git_prompt
#     return 0
#   fi
#   local git_remote_ahead
#   local git_remote_behind

#   if [[ -n "$(git --no-optional-locks status --porcelain -b | grep -Eo '\[ahead \d')" ]]; then
#     git_remote_ahead="%F{cyan}⇡%f"
#   else
#     unset git_remote_ahead
#   fi

#   if [[ -n "$(git --no-optional-locks status --porcelain -b | grep -Eo 'behind \d\]')" ]]; then
#     git_remote_behind="%F{cyan}⇣%f"
#   else
#     unset git_remote_behind
#   fi

#   git_arrows=${git_remote_ahead}${git_remote_behind}
# }

git_current_branch() {
  local ref
  ref=$(git symbolic-ref --quiet HEAD 2> /dev/null)
  local ret=$?
  if [[ $ret != 0 ]]; then
    ref=$(git rev-parse --short HEAD 2> /dev/null) || return
  fi
  echo ${ref#refs/heads/}
}

setup_git_prompt() {
    if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
      unset git_prompt
      return 0
    fi

    local git_branch
    local git_status_dirty
    local git_status_stash
    local git_status_stage
    local git_remote_ahead
    local git_remote_behind

    if [ "$(git stash list)" ]; then
        git_status_stash="%F{cyan}⚑%f"
    else
        unset git_status_stash
    fi

    if [ -n "$(git --no-optional-locks status --porcelain | grep -E '^[ACDMRU]')" ]; then
      git_status_stage="%F{yellow}●%f"
    else
      unset git_status_stage
    fi

    if [ "$(git --no-optional-locks status --porcelain)" ]; then
        git_status_dirty='%F{red}✱%f'
    else
        unset git_status_dirty
    fi

    if [[ -n "$(git --no-optional-locks status --porcelain -b | grep -Eo '\[ahead \d')" ]]; then
      git_remote_ahead="%F{cyan}⇡%f"
    else
      unset git_remote_ahead
    fi

    if [[ -n "$(git --no-optional-locks status --porcelain -b | grep -Eo 'behind \d\]')" ]]; then
      git_remote_behind="%F{cyan}⇣%f"
    else
      unset git_remote_behind
    fi

    git_branch="$(git_current_branch)"

    git_prompt=" %F{magenta}${git_branch}%f${git_remote_ahead}${git_remote_behind} ${git_status_dirty}${git_status_stash}"
}

prompt_deanacus_precmd() {
  setup_git_prompt
}

prompt_deanacus() {
  prompt_opts=(subst percent)
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd prompt_deanacus_precmd

  local linebreak

  linebreak=$'\n'

  NEWLINE=$'\n'

  PROMPT=$NEWLINE
  PROMPT+='%F{cyan}%~%f${git_prompt}'
  PROMPT+=$NEWLINE
  PROMPT+='%F{magenta}❯%f '
}

prompt_deanacus "$@"